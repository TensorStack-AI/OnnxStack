<UserControl x:Class="OnnxStack.UI.UserControls.ImageResultControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OnnxStack.UI.UserControls"
             xmlns:userControls="clr-namespace:OnnxStack.UI.UserControls"
             xmlns:behaviors="clr-namespace:OnnxStack.UI.Behaviors"
             xmlns:models="clr-namespace:OnnxStack.UI.Models"
             mc:Ignorable="d" 
             d:DesignWidth="500" Name="UI" Focusable="True" PreviewKeyDown="OnPreviewKeyDown" MouseEnter="OnMouseEnter">
    <UserControl.Resources>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="-4,0,0,-4"/>
        </Style>
    </UserControl.Resources>

    <Border DataContext="{Binding ElementName=UI}" BorderBrush="{StaticResource ControlBrightDefaultBorderBrush}" BorderThickness="2" >
        <StackPanel Margin="2">
            <Image Source="{Binding Result.Image, FallbackValue={StaticResource PlaceholderImage}, TargetNullValue={StaticResource PlaceholderImage}}" Width="{Binding SchedulerOptions.Width, FallbackValue=512}" Height="{Binding SchedulerOptions.Height, FallbackValue=512}" MinHeight="512" MinWidth="512"   >
                <Image.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Copy" Command="{Binding CopyImageCommand}" IsEnabled="{Binding HasResult}" />
                    </ContextMenu>
                </Image.ContextMenu>
            </Image>
            <StackPanel Visibility="{Binding HasResult, Converter={StaticResource InverseBooleanToVisibilityConverter}}" Margin="0,4">
                <ProgressBar Maximum="{Binding ProgressMax}" behaviors:SmoothProgressBarBehavior.SmoothValue="{Binding ProgressValue}" Height="22" />
            </StackPanel>
            <StackPanel Visibility="{Binding HasResult, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,4">
                <UniformGrid Columns="5" Margin="0,3" Width="{Binding SchedulerOptions.Width, FallbackValue=512}" MinWidth="512">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Text="Scheduler:" Margin="5,0,0,0"  FontSize="10" Opacity=".6" VerticalAlignment="Center" FontStyle="Italic"/>
                        <TextBlock Text="{Binding Result.SchedulerType}" Margin="5,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                        <TextBlock Text="Steps:" Margin="5,0,0,0" FontSize="10" Opacity=".6" VerticalAlignment="Center" FontStyle="Italic"/>
                        <TextBlock Text="{Binding Result.SchedulerOptions.InferenceSteps}" Margin="5,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Text="Guidance:" Margin="5,0,0,0"  FontSize="10" Opacity=".6" VerticalAlignment="Center" FontStyle="Italic"/>
                        <TextBlock Text="{Binding Result.SchedulerOptions.GuidanceScale}" Margin="5,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Text="Seed:" Margin="5,0,0,0"  FontSize="10" Opacity=".6" VerticalAlignment="Center" FontStyle="Italic"/>
                        <Button Content="{Binding Result.SchedulerOptions.Seed}" Command="{Binding UpdateSeedCommand}" CommandParameter="{Binding Result.SchedulerOptions.Seed}" Margin="5,0,0,0" Style="{x:Null}" BorderThickness="0" Background="Transparent" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Text="Elapsed:" Margin="5,0,0,0"  FontSize="10" Opacity=".6" VerticalAlignment="Center" FontStyle="Italic"/>
                        <TextBlock Text="{Binding Result.Elapsed, StringFormat={}{0:F1}s}" Margin="5,0,0,0"/>
                    </StackPanel>
                </UniformGrid>
            </StackPanel>
            <UniformGrid Columns="6" Height="30" IsEnabled="{Binding HasResult}">
                <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=SaveImageCommand}" CommandParameter="{Binding Result}" ToolTip="Save Image File">
                    <userControls:FontAwesome Icon="&#xf0c7;" IconStyle="Light"  Size="13" />
                </Button>
                <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=SaveBlueprintCommand}" CommandParameter="{Binding Result}" BorderThickness="0,1" ToolTip="Save Blueprint File">
                    <userControls:FontAwesome Icon="&#xf121;" IconStyle="Light"  Size="13" />
                </Button>
                <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=NavigateTextToImageCommand}" CommandParameter="{Binding Result}" ToolTip="Send To Text To Image">
                    <userControls:FontAwesome Icon="&#xf15c;" IconStyle="Light"  Size="13" />
                </Button>
                <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=NavigateImageToImageCommand}" CommandParameter="{Binding Result}" BorderThickness="0,1" ToolTip="Send To Image To Image">
                    <userControls:FontAwesome Icon="&#xf302;" IconStyle="Light"  Size="13" />
                </Button>
                <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=NavigateImageInpaintCommand}" CommandParameter="{Binding Result}" ToolTip="Send To Image Inpaint">
                    <userControls:FontAwesome Icon="&#xf1c5;" IconStyle="Light"  />
                </Button>
                <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=NavigateImagePaintToImageCommand}" CommandParameter="{Binding Result}" ToolTip="Send To Upscaler" BorderThickness="0,1,1,1">
                    <userControls:FontAwesome Icon="&#xf1fc;" IconStyle="Light" />
                </Button>
            </UniformGrid>
        </StackPanel>
    </Border>
</UserControl>
